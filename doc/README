CIS 551 : Spring 2012
Project 3
Secure Distributed Banking
Chis Imbriano
Dustin Zelle


* Describe contents of the directory.

Directory Structure

+ bin   - Compiled java classes
+ lib   - External libraries needed for project
+ src   - Source files (both ours and those provided)
+ doc   - README, Project Report
demo    - Script to install project and demonstrate functionality
 

Installation

* Run './demo install' from the root of the project.  This will compile the classes into the bin folder.

* Run './demo make-accounts' to create a new acct.db if there isn't one, and to optionally add new accounts.

* Run './demo bank' to start a BankServer

* Run './demo atm <atm#> <host>' to start an atm with atm number <atm#> and host <host>.  If the bank and atm server
    are local, use 'localhost' for the <host> parameter.

* Run './demo log <regexp>' to dump the contents of the log to stdout. 
    Note:   It is useful to use an ATM session number as the regexp to see just 
            those log message pertaining to that ATM session.



Requirements and Mechanism Overview
1. Authentication Algorithm
    * Meet criteria outlined (in assignment spec)

    * ATM should verify Bank's authenticity
    * ATM should obtain account owner's name (display it)
    * Establish AES session key
    * Server should verify user's authenticity
    * Obtain account number
    * Obtain ATM identifier
    * Establish shared session key with ATM
    * Based on RSA encryption
    
    
    a) Customer inserts ATMCard into ATM and enters PIN to verify ownership of Private Key
    b) ATM sends BankServer AuthInit Message on behalf of the Customer.
        i) Included in this message are:
            * ATM Identifier
            * Account number of the customer - allows Bank to find the public key of the customer
        ii) The bank also randomly selects a Sequence number to assign to this session of messages

    c) Bank issues challenge to Customer encrypted with the public key of the Customer
        i) Included in the Challenge are:
            * Nonce - generated by the BankServer
            * incremented Sequence number
    
    d) ATM Session recieves Challenge from BankServer, then sends Response to BankServer
        i) To send a valid response, the ATM must:
            * decrypt the Challenge sent from the bank using the authorized Private Key of the Customer
            * send back the Bank's Nonce
            * send back the next sequence number
        
        ii) At this point the Customer is authenticated to the bank
        
    e) ATM issues a Challenge to the bank server encrypted with the Bank's Public Key
        i) Included in the Challenge are:
            * Nonce - generated by the ATM
            * incremented Sequence number
    
    f) BankServer recieves Challenge from ATM, then sends Response to ATM
        i) To send a valid response, the Bank must:
            * decrypt the Challenge sent from the ATM using the Bank's PrivateKey
            * send back the ATM's Nonce
            * send back the next sequence number
    
        ii) At this point the Bank is authenticated to the ATM
    
    g) BankServer sends AuthMessage to ATM
        i) The AuthMessage includes:
            * AES SessionKey
        
        ii) The AuthMessage is the last to use RSA encryption.  Messages from now will use RSA signatures and AES encryption
        
    Authentication Protocol Complete 
    
    
2. Transaction Protocol
    * Meets criteria for confidentiality
    
    * No attack may modify or read contents of the transactions
    * Bank should obtain enough information during a transaction to convince a third party
       that the transaction was initiated by the user
    * Based on AES encryption and RSA signatures
    
    
    a) ATM sends one of
        * MakeDeposit
        * MakeWithdrawal
        * CheckBalance
        * Quit
        
        i) The Message is signed with the Customers PrivateKey
        ii) The Message is encrypted with the AES Session Key
    
    b) Bank Receives message, takes the requested action and 
        sends message to ATM indicating balance for all transactions requested
        
        i) Message is signed by the Banks PrivateKey
        ii) Message is encrypted by the AES Session Key
        

3. Cryptographic Audit Log
    * Protected against unauthorized disk accesses
    * Only BankServer uses the log
    * Justify the information recorded in the log
    
    Every logged message is actually two lines of content.
    1st line - RSA encryption using Banks public Key of the AES Session key for that message
    2nd line - SignedMessage being logged (encrypted by the AES Session key in the first line)
    
    
    Authentication Logging
    
    All of the messages received by the BankServer are logged. 
    These messages     
    
    
    Transaction Protocol Logging
        

Threat Types and Mitigation

* Passive Attacker
  - Read Meassages

* Active Attacker
  - Replay attacks
  - Changed messages
  - New messages generated

* Insecure log storage
  - Unauthorized Read
  - 

1. Authorship considered suspect
2. Deleted Messages
3. 


